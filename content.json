{"meta":{"title":"归墟茶室","subtitle":null,"description":"堆砌灵感，记录点滴","author":"FungueX","url":"https://funguexy.github.io"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2021-08-17T13:21:23.586Z","comments":false,"path":"about/index.html","permalink":"https://funguexy.github.io/about/index.html","excerpt":"","text":"[懒惰の归墟] 与&nbsp; FungueX&nbsp; （ 归墟 ） 对谈中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2021-08-07T01:55:48.000Z","updated":"2021-10-08T13:12:44.183Z","comments":false,"path":"bangumi/index.html","permalink":"https://funguexy.github.io/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"分类","date":"2021-08-07T14:42:16.000Z","updated":"2021-08-08T15:06:24.769Z","comments":false,"path":"categories/index.html","permalink":"https://funguexy.github.io/categories/index.html","excerpt":"","text":""},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2021-08-08T15:08:43.161Z","comments":false,"path":"client/index.html","permalink":"https://funguexy.github.io/client/index.html","excerpt":"","text":"暂未开发：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2021-09-15T15:06:21.137Z","comments":true,"path":"comment/index.html","permalink":"https://funguexy.github.io/comment/index.html","excerpt":"","text":"念两句诗 正在加载今日诗词.... 有什么想说的? 有什么想问的?","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2021-08-07T14:32:00.963Z","comments":false,"path":"donate/index.html","permalink":"https://funguexy.github.io/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2021-08-08T02:11:08.002Z","comments":false,"path":"lab/index.html","permalink":"https://funguexy.github.io/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"links/index.html","permalink":"https://funguexy.github.io/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2021-08-07T01:23:39.000Z","updated":"2021-08-07T01:43:04.784Z","comments":false,"path":"music/index.html","permalink":"https://funguexy.github.io/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2021-08-07T01:46:03.000Z","updated":"2021-08-07T01:47:08.542Z","comments":true,"path":"rss/index.html","permalink":"https://funguexy.github.io/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-08-07T01:47:16.000Z","updated":"2021-08-08T14:46:16.264Z","comments":false,"path":"tags/index.html","permalink":"https://funguexy.github.io/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2021-08-07T01:48:02.452Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://funguexy.github.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2021-08-07T02:02:15.604Z","comments":false,"path":"video/index.html","permalink":"https://funguexy.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/d9/d8/23685_Y1wYG.jpg', title: '加速世界', status: '已追完', progress: 100, jp: 'アクセル・ワールド', time: '放送时间: 2012-4-6 FRI.', desc: '故事发生在人人都使用名为“Neural Linker（神经连结装置）”的终端设备连线，生活的大半时间都建构在网络世界的不远未来。因为身材肥胖而受到欺凌的学生春雪，过著一边诅咒现实，一边躲在校内网络一角提升自己壁球游戏的分数最高纪录的日子。某天，美丽的副学生会长黑雪公主突然出现在他的面前，留下了谜一般的话语：少年……想不想“加速”到更快的境界？接受黑雪公主邀请的春雪，使用有线连接通信下载到名为“Brain Buster”的程式。此靠着Neural Linker的量子接续作用，拥有能够提升思考速度一千倍的效用。成为“Buster Linker（超频连线者）”的春雪，操纵著自己的角色，投入战斗之中。' }, { img : 'https://lain.bgm.tv/pic/cover/l/f6/68/12332_44qDK.jpg', title: '纸箱战机', status: '已追完', progress: 100, jp: 'ダンボール戦機', time: '放送开始: 2011-3-2 WED.', desc: ' 以近未来的世界为舞台，主人公山野斑与神秘女性交给他的小型战机LBX“AX-V”并肩战斗的故事。在故事中，所有的战机都被统称为LBX（Little Battler eXperience），在能够吸收80%冲击的一种科技革命般的“强化箱子”中进行战斗，而这种刺激又有趣的LBX战斗渐渐地成了小孩子们所喜爱的游戏……' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"Git常用命令","slug":"Git常用命令","date":"2021-10-16T02:11:53.000Z","updated":"2021-10-31T02:14:53.845Z","comments":true,"path":"2021/10/16/Git常用命令/","link":"","permalink":"https://funguexy.github.io/2021/10/16/Git常用命令/","excerpt":"","text":"记录一下常用的Git命令 部署博客过程中常用的命令git clone &lt;url&gt; # 克隆指定url下的库到本地 git init # 初始化本地库 git status # 查看库状态 git log # 查看提交历史 git diff # 查看变更内容 git add . # 跟踪所有改动过的文件 git commit -m &quot;VersionName&quot; # 提交所有更新过的文件 git commit --amend # 修改最后一次提交 git push # 提交代码到云端 创建本地库git clone &lt;url&gt; # 克隆远程版本库 git init # 初始化本地版本库 修改与提交相关的命令git status # 查看状态 git diff # 查看变更内容 git add . # 跟踪所有改动过的文件 git add &lt;file&gt; # 跟踪指定的文件 git mv &lt;old&gt; &lt;new&gt; # 文件改名 git rm &lt;file&gt; # 删除文件 git rm --cached &lt;file&gt; # 停止跟踪文件但不删除 git commit -m “VersionName” # 提交所有更新过的文件 git commit --amend # 修改最后一次提交 查看历史git log # 查看提交历史 git log -p &lt;file&gt; # 查看指定文件的提交历史 git blame &lt;file&gt; # 以列表方式查看指定文件的提交历史 撤销操作git reset --hard HEAD # 撤消工作目录中所有未提交文件的修改内容 git reset --hard &lt;version&gt; # 撤销到某个特定版本 git checkout HEAD &lt;file&gt; # 撤消指定的未提交文件的修改内容 git checkout -- &lt;file&gt; # 同上一个命令 git revert &lt;commit&gt; # 撤消指定的提交分支与标签 分支与标签git branch # 显示所有本地分支 git checkout &lt;branch/tag&gt; # 切换到指定分支或标签 git branch &lt;new-branch&gt; # 创建新分支 git branch -d &lt;branch&gt; # 删除本地分支 git tag # 列出所有本地标签 git tag &lt;tagname&gt; # 基于最新提交创建标签 git tag -a &quot;v1.0&quot; -m &quot;一些说明&quot; # -a指定标签名称，-m指定标签说明 git tag -d &lt;tagname&gt; # 删除标签 git checkout master git cherry-pick fd1a197 # 合并特定的commit到dev分支上 别名 alias alias命令用来设置指令的别名。我们可以使用该命令可以将一些较长的命令进行简化。使用alias时，用户必须使用单引号 ‘ ‘ 将原来的命令引起来，防止特殊字符导致错误。具体可看这篇博文。 git config --global alias.br=&quot;branch&quot; # 创建/查看本地分支 git config --global alias.co=&quot;checkout&quot; # 切换分支 git config --global alias.cb=&quot;checkout -b&quot; # 创建并切换到新分支 git config --global alias.cm=&quot;commit -m&quot; # 提交 git config --global alias.st=&quot;status&quot; # 查看状态 git config --global alias.pullm=&quot;pull origin master&quot; # 拉取分支 git config --global alias.pushm=&quot;push origin master&quot; # 提交分支 git config --global alias.log=&quot;git log --oneline --graph --decorate --color=always&quot; # 单行、分颜色显示记录 git config --global alias.logg=&quot;git log --graph --all --format=format:&#39;%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)&#39; --abbrev-commit --date=relative&quot; # 复杂显示 打包 Git中打包文件是个简单的活，不管是打包全部文件作为release，还是只压缩更改的文件，一个命令就能搞定。 而且，打包之后目录结构完全不变，这对于覆盖部署来说极其方便。 git支持zip和tar两种输出格式。 git打包命令会自动忽略.gitignore中指定的目录和文件，以及.git目录。 git archive --format=zip --output ../file.zip master # 将master分支打包成file.zip文件，保存在上一级目录 git archive --format=tar --output master.tar master # 将master分支文件打包为master.tar文件。 git archive --format=zip --output ../v1.2.zip v1.2 # 打包v1.2标签的文件，保存在上一级目录v1.2.zip文件中 git archive --format=zip v1.2 &gt; ../v1.2.zip # 作用同上一条命令 全局和局部配置-全局配置保存在：$Home/.gitconfig -本地仓库配置保存在：.git/config","categories":[{"name":"杂记","slug":"杂记","permalink":"https://funguexy.github.io/categories/杂记/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://funguexy.github.io/tags/Git/"},{"name":"学习","slug":"学习","permalink":"https://funguexy.github.io/tags/学习/"}],"keywords":[{"name":"杂记","slug":"杂记","permalink":"https://funguexy.github.io/categories/杂记/"}]},{"title":"从零开始使用Hexo+Github搭建属于自己的私人博客","slug":"从零开始使用Hexo-Github搭建属于自己的私人博客","date":"2021-09-21T13:41:00.000Z","updated":"2021-10-01T14:10:17.523Z","comments":true,"path":"2021/09/21/从零开始使用Hexo-Github搭建属于自己的私人博客/","link":"","permalink":"https://funguexy.github.io/2021/09/21/从零开始使用Hexo-Github搭建属于自己的私人博客/","excerpt":"","text":"做为一个没什么基础的人，搭建这个博客的过程中走了不少弯路，现在稍微写一点过程，希望能帮到后来人。 了解Hexo与Github Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 GitHub是一个面向开源及私有软件项目的托管平台，我们使用github pages服务搭建博客。 准备工作搭建环境为了在电脑上编写博客，我们需要在电脑上安装node.js，hexo与Git。 安装Git前往Git的官网 Win与Mac系统直接下载安装包安装即可。 Linux (Ubuntu, Debian)安装Git： sudo apt-get install git-core Linux (Fedora, Red Hat, CentOS)安装Git： sudo yum install git-core 具体安装可以看廖雪峰大佬的的教程 安装完成后，使用win+R呼出运行窗口，输入cmd调出命令提示行，输入 git v 如果能如下图一般看到版本号说明安装成功。 安装node.js由于不同插件，软件对node环境版本要求不同，为了避免可能出现的兼容性问题，我们安装node版本管理工具mvn。 1.如果之前在电脑中安装过node，请先卸载。2.前往nvm的官网获取安装包。3.安装nvm，注意nvm的安装地址中不可以存在空格。4.调出cmd窗口，输入nvm，则可看到如下图所示的各种命令提示。5.输入 nvm install latest 获取最新版本的node。 再输入 nvm install 12.22.2 获取12.22.2版本的node 6.在cmd中输入 nvm use 12.22.2 来启用12.22.2版本。之后可以用nvm list命令来查看本机中安装的所有node版本。Hexo需要10.13版本以上的Node。 安装Hexo在你准备存放博客源代码的目录创建一个文件夹，如blog 进入文件夹，单击右键选择Git Bash Here打开终端。 输入下方代码来安装Hexo $ npm install -g hexo-cli 如果安装正确，那么窗口内将会出现如下图一般的版本提示。 安装完成后在同一终端内输入 $ hexo init $ npm install 来初始化安装 然后输入 $ npm install hexo-server --save $ hexo s 来安装并启动hexo-servers服务 打开浏览器，在地址栏输入’localhost:4000’就可以看到默认网页了。如下图 关于Hexo的其他配置我们在主题安装完成以后再进行。 Github创建仓库进入Github，注册账号。 看不懂的话，有教程。将鼠标悬停头像上，点击Your repositories进入仓库页面点击new创建新库。填写仓库名，格式必须为&lt;用户名&gt;.github.io，然后点击Create repository。创建仓库部分到这里就结束了。 SSH配置1.打开git base终端，输入下方代码 ssh-keygen -t rsa -C &quot;邮件地址&quot; #这里的邮件地址是github账号绑定的邮件地址 密码不需要设置，连点三下回车即可。 生成的ssh密钥存放于c:/用户/Administrator/.ssh目录下 进入到ssh文件夹，复制id_rsa.pub文件内全部内容,这个文件可以直接用文本编辑器打开 回到Github，进入设置页面 点击SSH and GPG keys选项卡 点击New SSH key 标题可以随意，可以互相区分即可，将之前复制的内容复制到key中 之后点击Add ssh key即可。 测试SSH配置是否成功，终端内输入 ssh -T git@github.com 如出现下图一般的反馈即为成功。 设置账号与密码 $ git config --global user.name &quot;xxxxxxx&quot; #你的github用户名 $ git config --global user.email &quot;xxx@163.com&quot; #填写你的github注册邮箱 配置Hexo进入博客目录，打开目录中的_config.yml文件 在文件的尾部加入以下代码 deploy: type: git repo: github: #填入github仓库的地址，冒号后有空格注意 coding: #填入coding仓库地址，冒号后有空格注意 branch: main #分支名main/master之类的均可 可以将注释删除以避免错误。保存后就可通过hexo d命令博客的静态文件部署至Github pages。每次部署前记得使用hexo c清除上次生成的文件，再使用hexo g生成新的静态文件。 上传后就能在&lt;用户名&gt;.github.io看到你的博客了。 关于Hexo的更多配置、部署中碰到的问题与主题应用之后再讲。 就这样，谢谢你能看到这里，希望额能帮到你。φ(゜▽゜*)♪","categories":[{"name":"技术","slug":"技术","permalink":"https://funguexy.github.io/categories/技术/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://funguexy.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://funguexy.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"https://funguexy.github.io/tags/blog/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://funguexy.github.io/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2021-09-15T14:16:00.000Z","updated":"2021-09-22T12:42:54.824Z","comments":true,"path":"2021/09/15/Hexo-Theme-Sakura/","link":"","permalink":"https://funguexy.github.io/2021/09/15/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 本站使用由hojun移植到Hexo平台的Sakura主题，感谢hojun。 本文是Sakura主题的简单部署指南，更多内容敬请期待 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单 由原版修改而来的使用教程基于hojun所编写的原版教程修改而成。 1、主题下载安装访问链接hexo-theme-sakura下载 建议下载压缩包格式，因为除了主题内容还有一些source的配置，这些内容对新手来说还是太复杂了，直接下载解压可以省去这些麻烦。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: #网站前缀名 siteName: #站点名称 # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico #此处目录为博客根目录下的~\\themes\\Sakura\\source\\images文件夹 avatar: /img/custom/avatar.jpg # 站点url 【改】 url: #改为站点的地址 # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 共有三个格位【改】 startdash: - {url: /Hexo-Theme-Sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/3342564, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/FungueXY, img: /img/social/github.png} sina: {url: , img: /img/social/sina.png} wangyiyun: {url: , img: /img/social/wangyiyun.png} zhihu: {url: , img: /img/social/zhihu.png} email: {url: , img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/FungueXY, fa: fa-github, color: 333} weibo: {url: , fa: fa-weibo, color: dd4b39} qq: {url: , fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: v_appKey: 分类页和标签页配置分类页(Archives) 标签页(tag) 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 < (￣︶￣)> items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 其他内容，会在之后的文章补充……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"https://funguexy.github.io/categories/技术/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://funguexy.github.io/tags/hexo/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://funguexy.github.io/categories/技术/"}]},{"title":"Hello-world","slug":"hello-world","date":"2021-07-19T14:16:00.000Z","updated":"2021-09-17T14:45:54.676Z","comments":false,"path":"2021/07/19/hello-world/","link":"","permalink":"https://funguexy.github.io/2021/07/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}